// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProteinProAPI.Database;

#nullable disable

namespace ProteinProAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProteinProAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Keywords")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "proteinpulver.jpg",
                            Keywords = "whey, isolat, proteinpulver",
                            Name = "Proteinpulver"
                        },
                        new
                        {
                            Id = 2,
                            Image = "kreatin.jpg",
                            Keywords = "kreatin, creatine, creapure",
                            Name = "Kreatin"
                        },
                        new
                        {
                            Id = 3,
                            Image = "weightGainer.jpg",
                            Keywords = "weight gainer, mass gainer, vægttilskud, gainer, weight-gainer, mass-gainer",
                            Name = "Weight gainer"
                        },
                        new
                        {
                            Id = 4,
                            Image = "preworkout.jpg",
                            Keywords = "pre workout, preworkout, pre-workout",
                            Name = "Pre workout"
                        },
                        new
                        {
                            Id = 5,
                            Image = "proteinbar.jpg",
                            Keywords = "proteinbar, protein bar, barer, protein snack",
                            Name = "Proteinbarer"
                        },
                        new
                        {
                            Id = 6,
                            Image = "elektrolytter.jpg",
                            Keywords = "elektrolyt, elektrolytter, electrolyte",
                            Name = "Elektrolytter"
                        },
                        new
                        {
                            Id = 7,
                            Image = "gel.jpg",
                            Keywords = "gel, gels",
                            Name = "Gels"
                        },
                        new
                        {
                            Id = 8,
                            Image = "snacks.jpg",
                            Keywords = "snack, nødder, tørret frugt, bars, chips, topping, sirup, toppings",
                            Name = "Snacks"
                        },
                        new
                        {
                            Id = 9,
                            Image = "tilbehør.jpg",
                            Keywords = "shaker, bottle, tøj, sko, bælte, taske, hat, kasket",
                            Name = "Tilbehør"
                        },
                        new
                        {
                            Id = 10,
                            Image = "other.jpg",
                            Keywords = "",
                            Name = "Andet"
                        });
                });

            modelBuilder.Entity("ProteinProAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Retailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ProteinProAPI.Models.Product", b =>
                {
                    b.HasOne("ProteinProAPI.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProteinProAPI.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
